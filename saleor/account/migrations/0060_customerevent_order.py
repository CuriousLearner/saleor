# Generated by Django 3.2.12 on 2022-02-16 13:53

import django.db.models.deletion
from django.db import migrations, models

BATCH_SIZE = 10000


def set_order_relations(apps, schema_editor):
    CustomerEvent = apps.get_model("account", "CustomerEvent")
    Order = apps.get_model("order", "Order")

    queryset = CustomerEvent.objects.filter(order_id__isnull=False)
    for batch_pks in queryset_in_batches(queryset):
        batch = CustomerEvent.objects.filter(pk__in=batch_pks)
        order_tokens = batch.values_list("order_token", flat=True)
        order_in_bulks = Order.objects.in_bulk(order_tokens, field_name="token")
        for event in batch:
            event.order = order_in_bulks.get(event.order_token)

        CustomerEvent.objects.bulk_update(batch, ["order"])


def queryset_in_batches(queryset):
    """Slice a queryset into batches.

    Input queryset should be sorted be pk.
    """
    start_pk = 0

    while True:
        qs = queryset.filter(pk__gt=start_pk)[:BATCH_SIZE]
        pks = list(qs.values_list("pk", flat=True))

        if not pks:
            break

        yield pks

        start_pk = pks[-1]


class Migration(migrations.Migration):

    dependencies = [
        ("order", "0124_order_number"),
        ("account", "0059_customerevent_order_token"),
    ]

    operations = [
        migrations.AddField(
            model_name="customerevent",
            name="order",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="order.order",
            ),
        ),
        # rewrite order relation
        migrations.RunPython(set_order_relations, migrations.RunPython.noop),
        # remove field that keeps order token
        migrations.RemoveField(
            model_name="customerevent",
            name="order_token",
        ),
    ]
